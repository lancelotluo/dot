digraph {
    "入口函数ngx_http_lua_access_handler_inline"[style=filled, fillcolor=green];
    "入口函数ngx_http_lua_access_handler_inline"->"L = ngx_http_lua_get_lua_vm(r, NULL)"[style=dashed];
    "L = ngx_http_lua_get_lua_vm(r, NULL)"->"rc = ngx_http_lua_cache_loadbuffer";
    "rc = ngx_http_lua_cache_loadbuffer"->"ngx_http_lua_access_by_chunk(L, r)";
    "ngx_http_lua_access_by_chunk(L, r)"->"入口函数ngx_http_lua_access_handler_inline"[style=dashed];

    subgraph cluster_ngx_http_lua_access_by_chunk {
        "rc"[shape=diamond];
        "co = ngx_http_lua_new_thread(r, L, &co_ref)"[color=red];
        "rc = ngx_http_lua_run_thread(L, r, ctx, 0)"[color=red];

        "ngx_http_lua_access_by_chunk(L, r)"->"co = ngx_http_lua_new_thread(r, L, &co_ref)"[style=dashed];
        "co = ngx_http_lua_new_thread(r, L, &co_ref)"->"lua_xmove(L, co, 1)";
        "lua_xmove(L, co, 1)"->"ngx_http_lua_get_globals_table(co)";
        "ngx_http_lua_get_globals_table(co)"->"ngx_http_lua_set_req(co, r)";
        "ngx_http_lua_set_req(co, r)"->"rc = ngx_http_lua_run_thread(L, r, ctx, 0)";
        
        "rc = ngx_http_lua_run_thread(L, r, ctx, 0)"->"rc";
        "rc"->"rc == NGX_ERROR || rc > NGX_OK";
        "rc == NGX_ERROR || rc > NGX_OK"->"ngx_http_lua_access_by_chunk(L, r)"[label=rc];
        "rc"->"rc == NGX_AGAIN";
        "rc == NGX_AGAIN"->" rc = ngx_http_lua_run_posted_threads(c, L, r, ctx, nreqs)";
        "rc = ngx_http_lua_run_posted_threads(c, L, r, ctx, nreqs)"->"ngx_http_lua_access_by_chunk(L, r)"[style=dashed,label="NGX_DECLINED || rc"];
        "rc"->"rc == NGX_DONE";
        "rc == NGX_DONE"->"ngx_http_lua_finalize_request(r, NGX_DONE)";
        "ngx_http_lua_finalize_request(r, NGX_DONE)"->"rc = ngx_http_lua_run_posted_threads(c, L, r, ctx, nreqs)";
        "rc = ngx_http_lua_run_posted_threads(c, L, r, ctx, nreqs)"->"ngx_http_lua_access_by_chunk(L, r)"[style=dashed,label="NGX_DECLINED || rc"];
        "rc"->"rc == NGX_OK";
        "rc == NGX_OK"->"rc = ngx_http_lua_send_chain_link";
        "rc = ngx_http_lua_send_chain_link"->"ngx_http_lua_access_by_chunk(L, r)"[style=dashed, labe=NGX_OK];
    }
}
